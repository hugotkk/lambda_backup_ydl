AWSTemplateFormatVersion : '2010-09-09'
Description: >
  This template deploys a CodePipeline with its required resources.

  The following stages are predefined in this template:
  - Source
  - UpdatePipeline
  - BuildAndPackage
  - DeployTest
  - DeployProd


Parameters:
  GitProviderType:
    Type: String
    Default: "CodeCommit"
  CodeCommitRepositoryName:
    Type: String
    Default: "lambda_backup_ydl"
  MainGitBranch:
    Type: String
    Default: "main"
  SamTemplate:
    Type: String
    Default: "template.yaml"
  ProdRegion:
    Type: String
    Default: "us-east-2"
  ProdStackName:
    Type: String
    Default: "lambda-ytdl2"
  ProdArtifactBucket:
    Type: String
    Default: "test-111234"
  ProdImageRepository:
    Type: String
    Default: "973127139531.dkr.ecr.us-east-2.amazonaws.com/test"

Resources:
  #   ____
  # / ___|  ___  _   _ _ __ ___ ___
  # \___ \ / _ \| | | | '__/ __/ _ \
  #   ___) | (_) | |_| | | | (_|  __/
  # |____/ \___/ \__,_|_|  \___\___|
  CloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: cwe-pipeline-execution
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: codepipeline:StartPipelineExecution
            Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}"

  CloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
        - aws.codecommit
        detail-type:
        - 'CodeCommit Repository State Change'
        resources:
        - !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitRepositoryName}"
        detail:
          event:
          - referenceCreated
          - referenceUpdated
          referenceType:
          - branch
          referenceName:
          - !Ref MainGitBranch
      Targets:
      - Arn: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}"
        RoleArn: !GetAtt CloudWatchEventRole.Arn
        Id: codepipeline-AppPipeline

  #  ____  _            _ _
  # |  _ \(_)_ __   ___| (_)_ __   ___
  # | |_) | | '_ \ / _ | | | '_ \ / _ \
  # |  __/| | |_) |  __| | | | | |  __/
  # |_|   |_| .__/ \___|_|_|_| |_|\___|
  #         |_|
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref PipelineArtifactsBucket
        Type: S3
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn
      RestartExecutionOnUpdate: true
      Stages:
      - Name: Source
        Actions:
        - Name: SourceCodeRepo
          ActionTypeId:
            Category: Source
            Owner: AWS
            Provider: CodeCommit
            Version: "1"
          Configuration:
            RepositoryName: !Ref CodeCommitRepositoryName
            PollForSourceChanges: false
            BranchName: !Ref MainGitBranch
          OutputArtifacts:
          - Name: SourceCodeAsZip
          RunOrder: 1

      - Name: UpdatePipeline
        Actions:
        - Name: CreateChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: "1"
          Configuration:
            ActionMode: CHANGE_SET_REPLACE
            RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
            StackName: !Ref AWS::StackName
            ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
            TemplatePath: SourceCodeAsZip::codepipeline.yaml
            Capabilities: CAPABILITY_NAMED_IAM
          InputArtifacts:
          - Name: SourceCodeAsZip
          RunOrder: 1
        - Name: ExecuteChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: "1"
          Configuration:
            ActionMode: CHANGE_SET_EXECUTE
            RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
            StackName: !Ref AWS::StackName
            ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
          OutputArtifacts:
          - Name: !Sub ${AWS::StackName}ChangeSet
          RunOrder: 2

      - Name: BuildAndPackage
        Actions:
        - Name: CodeBuild
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: "1"
          Configuration:
            ProjectName: !Ref CodeBuildProjectBuildAndPackage
          InputArtifacts:
          - Name: SourceCodeAsZip
          OutputArtifacts:
          - Name: BuildArtifactAsZip

      - Name: DeployProd
        Actions:
        # - Name: ManualApproval
        #   ActionTypeId:
        #    Category: Approval
        #    Owner: AWS
        #    Provider: Manual
        #    Version: "1"
        #   RunOrder: 1
        - Name: DeployProd
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: "1"
          Configuration:
            ProjectName: !Ref CodeBuildProjectDeploy
            # EnvironmentVariables: !Sub |
            #   [
            #     {"name": "ENV_TEMPLATE", "value": "packaged-prod.yaml"},
            #     {"name": "ENV_REGION", "value": "${ProdRegion}"},
            #     {"name": "ENV_STACK_NAME", "value": "${ProdStackName}"},
            #     {"name": "ENV_PIPELINE_EXECUTION_ROLE", "value": "${ProdPipelineExecutionRole}"},
            #     {"name": "ENV_CLOUDFORMATION_EXECUTION_ROLE", "value": "${ProdCloudFormationExecutionExeRole}"},
            #     {"name": "ENV_BUCKET", "value": "${ProdArtifactBucket}"},
            #     {"name": "ENV_IMAGE_REPOSITORY", "value": "${ProdImageRepository}"}
            #   ]
          InputArtifacts:
          - Name: BuildArtifactAsZip
          RunOrder: 2

  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          !Ref PipelineArtifactsLoggingBucket
        LogFilePrefix: "artifacts-logs"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256

  PipelineArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PipelineArtifactsBucket
      PolicyDocument:
        Statement:
        - Effect: "Deny"
          Action: "s3:*"
          Principal: "*"
          Resource:
            - !Sub  "${PipelineArtifactsBucket.Arn}/*"
            - !GetAtt PipelineArtifactsBucket.Arn
          Condition:
            Bool:
              aws:SecureTransport: false
        - Effect: Allow
          Action:
            - s3:*
          Resource:
            - !Sub arn:aws:s3:::${PipelineArtifactsBucket}
            - !Sub arn:aws:s3:::${PipelineArtifactsBucket}/*
          Principal:
            AWS:
              - !GetAtt CodePipelineExecutionRole.Arn

  PipelineArtifactsLoggingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: "LogDeliveryWrite"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256

  PipelineArtifactsLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PipelineArtifactsLoggingBucket
      PolicyDocument:
        Statement:
        - Effect: "Deny"
          Action: "s3:*"
          Principal: "*"
          Resource:
          - !Sub "${PipelineArtifactsLoggingBucket.Arn}/*"
          - !GetAtt PipelineArtifactsLoggingBucket.Arn
          Condition:
            Bool:
              aws:SecureTransport: false

  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action:
          - "sts:AssumeRole"
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
      Policies:
      - PolicyName: CodePipelineAccess
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - "iam:PassRole"
            Resource: "*"
      - PolicyName: CodeCommitAccess
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - 'codecommit:CancelUploadArchive'
            - 'codecommit:GetBranch'
            - 'codecommit:GetCommit'
            - 'codecommit:GetUploadArchiveStatus'
            - 'codecommit:UploadArchive'
            Resource:
            - !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitRepositoryName}"
      - PolicyName: CodePipelineCodeAndS3Bucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Action:
            - s3:GetBucketAcl
            - s3:GetBucketLocation
            Effect: Allow
            Resource:
              Fn::GetAtt:
              - PipelineArtifactsBucket
              - Arn
          - Action:
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:PutObject"
            Effect: Allow
            Resource:
              Fn::Sub: ${PipelineArtifactsBucket.Arn}/*

      - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - "codebuild:StartBuild"
            - "codebuild:BatchGetBuilds"
            Resource:
            - !GetAtt CodeBuildProjectBuildAndPackage.Arn
            - !GetAtt CodeBuildProjectDeploy.Arn
          - Effect: Allow
            Action:
            - "cloudformation:CreateStack"
            - "cloudformation:DescribeStacks"
            - "cloudformation:DeleteStack"
            - "cloudformation:UpdateStack"
            - "cloudformation:CreateChangeSet"
            - "cloudformation:ExecuteChangeSet"
            - "cloudformation:DeleteChangeSet"
            - "cloudformation:DescribeChangeSet"
            - "cloudformation:SetStackPolicy"
            - "cloudformation:SetStackPolicy"
            - "cloudformation:ValidateTemplate"
            Resource:
            - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"

  # PipelineStackCloudFormationExecutionRole is used for the pipeline to self mutate
  PipelineStackCloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action: "sts:AssumeRole"
          Principal:
            Service: cloudformation.amazonaws.com
      Policies:
      - PolicyName: GrantCloudFormationFullAccess
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'

  ProdPipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Role
          Value: pipeline-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action: "sts:AssumeRole"
          Principal:
            AWS: !GetAtt CodeBuildServiceRole.Arn
      Policies:
      - PolicyName: GrantCloudFormationFullAccess
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'

  ProdCloudFormationExecutionExeRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Role
          Value: pipeline-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Action: "sts:AssumeRole"
          Principal:
            Service: cloudformation.amazonaws.com
      Policies:
      - PolicyName: GrantCloudFormationFullAccess
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: '*'
            Resource: '*'

  #   ____          _      ____        _ _     _
  #  / ___|___   __| | ___| __ ) _   _(_| | __| |
  # | |   / _ \ / _` |/ _ |  _ \| | | | | |/ _` |
  # | |__| (_) | (_| |  __| |_) | |_| | | | (_| |
  #  \____\___/ \__,_|\___|____/ \__,_|_|_|\__,_|
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Role
          Value: aws-sam-pipeline-codebuild-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
            - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
              - codebuild.amazonaws.com
      Policies:
      - PolicyName: CodeBuildLogs
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource:
            - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
      - PolicyName: CodeBuildArtifactsBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:PutObject"
            Resource:
            - !Sub "arn:aws:s3:::${PipelineArtifactsBucket}/*"
      - PolicyName: AssumeStagePipExecutionRoles
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Resource: "*"
            Condition:
              StringEquals:
                aws:ResourceTag/Role: pipeline-execution-role

  CodeBuildProjectBuildAndPackage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: SAM_TEMPLATE
            Value: !Ref SamTemplate
          - Name: PROD_REGION
            Value: !Ref ProdRegion
          - Name: PROD_PIPELINE_EXECUTION_ROLE
            Value: !GetAtt ProdPipelineExecutionRole.Arn
          - Name: PROD_ARTIFACT_BUCKET
            Value: !Ref ProdArtifactBucket
          - Name: PROD_IMAGE_REPOSITORY
            Value: !Ref ProdImageRepository
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_build_package.yml

  CodeBuildProjectDeploy:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
        - Name: ENV_TEMPLATE
          Value: "packaged-prod.yaml"
        - Name: ENV_REGION
          Value: !Ref ProdRegion
        - Name: ENV_STACK_NAME
          Value: !Ref ProdStackName
        - Name: ENV_PIPELINE_EXECUTION_ROLE
          Value: !GetAtt ProdPipelineExecutionRole.Arn
        - Name: ENV_CLOUDFORMATION_EXECUTION_ROLE
          Value: !GetAtt ProdCloudFormationExecutionExeRole.Arn
        - Name: ENV_BUCKET
          Value: !Ref ProdArtifactBucket
        - Name: ENV_IMAGE_REPOSITORY
          Value: !Ref ProdImageRepository
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_deploy.yml
